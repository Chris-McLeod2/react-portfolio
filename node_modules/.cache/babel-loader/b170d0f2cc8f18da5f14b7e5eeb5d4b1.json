{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcleo\\\\desktop\\\\react-portfolio\\\\src\\\\components\\\\pages\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateEmail, capitalizeFirstLetter } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const {\n    name,\n    email,\n    message\n  } = formState;\n  const [errorMessage, setErrorMessage] = useState('');\n  const [emailOBJ, setemailOBJ] = useState({\n    name: '',\n    email: '',\n    message: ''\n  }); // function handleChange(e) {\n  //     if (e.target.name === 'email') {\n  //         const isValid = validateEmail(e.target.value);\n  //         if (!isValid) {\n  //             setErrorMessage('Your email is invalid.');\n  //         } else {\n  //             setErrorMessage('');\n  //         }\n  //     } else {\n  //         if (!e.target.value.length) {\n  //             setErrorMessage(`${capitalizeFirstLetter(e.target.name)} is required.`);\n  //         } else {\n  //             setErrorMessage('');\n  //         }\n  //     }\n  //     if (!errorMessage) {\n  //         setFormState({ ...formState, [e.target.name]: e.target.value });\n  //     }\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n    document.querySelectorAll('.form-control').forEach(input => input.value = \"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          required: true,\n          type: \"text\",\n          name: \"name\",\n          defaultValue: name,\n          onBlur: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          required: true,\n          type: \"email\",\n          name: \"email\",\n          defaultValue: email,\n          onBlur: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          required: true,\n          name: \"message\",\n          rows: \"4\",\n          defaultValue: message,\n          onBlur: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        href: \"mailto:mcleod32@live.com\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Contact, \"8W7+u6uls7bqX6gL/g6u9GUTe1E=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/mcleo/desktop/react-portfolio/src/components/pages/Contact.js"],"names":["React","useState","validateEmail","capitalizeFirstLetter","Contact","formState","setFormState","name","email","message","errorMessage","setErrorMessage","emailOBJ","setemailOBJ","handleSubmit","e","preventDefault","console","log","document","querySelectorAll","forEach","input","value","handleChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { validateEmail, capitalizeFirstLetter } from '../../utils/helpers';\n\nfunction Contact() {\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n\n    const [errorMessage, setErrorMessage] = useState('');\n\tconst [emailOBJ, setemailOBJ] = useState({\n\t\tname: '', email: '', message: ''\n\t}); \n    // function handleChange(e) {\n    //     if (e.target.name === 'email') {\n    //         const isValid = validateEmail(e.target.value);\n    //         if (!isValid) {\n    //             setErrorMessage('Your email is invalid.');\n    //         } else {\n    //             setErrorMessage('');\n    //         }\n    //     } else {\n    //         if (!e.target.value.length) {\n    //             setErrorMessage(`${capitalizeFirstLetter(e.target.name)} is required.`);\n    //         } else {\n    //             setErrorMessage('');\n    //         }\n    //     }\n    //     if (!errorMessage) {\n    //         setFormState({ ...formState, [e.target.name]: e.target.value });\n    //     }\n    // }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n        document.querySelectorAll('.form-control').forEach((input) => input.value = \"\")\n    }\n\n    return (\n        <div className='container'>\n            <h2>Contact me</h2>\n            <form onSubmit={handleSubmit}>\n                <div className='form-group'>\n                    <label htmlFor=\"name\">Name:</label>\n                    <input className='form-control' required type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor=\"email\">Email:</label>\n                    <input className='form-control' required type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor=\"message\">Message:</label>\n                    <textarea className='form-control' required name=\"message\" rows=\"4\" defaultValue={message} onBlur={handleChange} />\n                </div>\n                {errorMessage && (\n                    <div>\n                        <p>{errorMessage}</p>\n                    </div>\n                )}\n                <button className='btn btn-primary' href=\"mailto:mcleod32@live.com\" type=\"submit\">Submit</button>\n            </form>\n           \n        </div>\n    )\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}